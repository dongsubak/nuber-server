 # No resolver, only graphql type
type User {
    id: Int!
    email: String
    verifiedEmail: Boolean!
    firstName: String!
    lastname: String!
#    facebookID: String
    age: Int
    password: String
    phoneNumber: String
    verifiedPhoneNumber: Boolean
    profilePhoto: String
    fullName: String
    isDriving: Boolean!
    isRiding: Boolean!
    isTaken: Boolean!
    lastLng: Float
    lastLat: Float
    lastOrientation: Float
    fbId: String
    chat: Chat # Chat Type이 되는 이유는 schema.ts에서 하나로 합쳐주기 때문이다.
    messages: [Message] # Message Type이 되는 이유는 schema.ts에서 하나로 합쳐주기 때문이다.
    verifications: [Verification] # Verification Type이 되는 이유는 schema.ts에서 하나로 합쳐주기 때문이다.
    ridesAsPassenger: [Ride] # Ride Type이 되는 이유는 schema.ts에서 하나로 합쳐주기 때문이다.
    ridesAsDriver: [Ride] # Ride Type이 되는 이유는 schema.ts에서 하나로 합쳐주기 때문이다.
    createdAt: String!
    updatedAt: String
}

type Query {
    user: User
}